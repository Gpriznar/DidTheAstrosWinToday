{"version":3,"sources":["apiKey.js","components/VictoryMessage.js","components/DefeatMessage.js","components/TodaysGame.js","App.js","serviceWorker.js","index.js"],"names":["apiKey","apiPW","VictoryMessage","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","winMessages","randomVictoryMessage","Math","floor","random","length","react_default","a","createElement","Component","DefeatMessage","defeatMessages","randomDefeatMessage","TodaysGame","_this","today","Date","call","componentDidMount","state","getUTCMonth","toString","padStart","axios","method","url","auth","username","password","then","response","games","data","references","setState","gameStatus","awayTeam","schedule","abbreviation","homeTeam","venueId","venue","id","gameStart","startTime","awayScore","score","awayScoreTotal","homeScore","homeScoreTotal","topOrBottom","currentInningHalf","batterLastName","playStatus","batter","lastName","pitcherLastName","pitcher","outs","outCount","balls","ballCount","strikes","strikeCount","firstBaseRunner","secondBaseRunner","thirdBaseRunner","runnersOn","inning","currentInning","playedStatus","catch","error","console","log","body","components_VictoryMessage","components_DefeatMessage","date","isAM","getHours","getMinutes","dist_default","large","up","className","medium","only","small","down","App","src_components_TodaysGame","Boolean","window","location","hostname","match","ReactDOM","render","dist","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ffb89901.chunk.js","sourcesContent":["export const apiKey = 'fbd092c8-d4ac-4444-bfea-24b226'\nexport const apiPW = 'MYSPORTSFEEDS'\n","import React, {Component} from 'react'\n\nexport class VictoryMessage extends Component {\n\nrender() {\n\nlet winMessages = ['Oh yeaaa!', 'You know it!', 'What else did you expect?', 'YUPPP', 'Hell yea!', '%$*# YEAH!', 'Hot diggity!']\nlet randomIndex = Math.floor(Math.random() * winMessages.length)\nlet randomVictoryMessage = winMessages[randomIndex]\n\n  return(\n    <div>\n    <p> {randomVictoryMessage} </p>\n    </div>\n  )\n }\n}\n\nexport default VictoryMessage\n","import React, {Component} from 'react'\n\nexport class DefeatMessage extends Component {\n\nrender() {\n\n  let defeatMessages = ['Uh oh', 'Maybe next time', 'Not today chief', 'Dang...', 'Unfortunately Not', 'NOOOOOO!', 'Ah, crap', '*#$@ no']\n  let randomIndex = Math.floor(Math.random() * defeatMessages.length)\n  let randomDefeatMessage = defeatMessages[randomIndex]\n\n  return(\n    <div>\n    <p> {randomDefeatMessage}</p>\n    </div>\n  )\n}\n\n\n}\n\nexport default DefeatMessage\n","import React, {Component} from 'react'\nimport axios from 'axios'\nimport {apiKey} from '../apiKey'\nimport {apiPW} from '../apiKey'\nimport './TodaysGame.css';\nimport Breakpoint from 'react-socks'\nimport VictoryMessage from \"./VictoryMessage\"\nimport DefeatMessage from \"./DefeatMessage\"\n\n\n\nexport class TodaysGame extends Component {\n    constructor() {\n        let today = new Date()\n        super()\n\n        this.state = {\n            // isHomeTeam: false,\n            today: today,\n            gameStart: '',\n            homeTeam: '',\n            awayTeam: '',\n            inning: '',\n            topOrBottom: '',\n            awayScore: 0,\n            homeScore: 0,\n            gameStatus: 'loading',\n            batterLastName: '',\n            pitcherLastName: '',\n            outs: 0,\n            balls: 0,\n            strikes: 0,\n            runnersOn: ''\n            // runnerOnSecond: false,\n            // runnerOnThird: false\n        }\n    }\n\n\n    componentDidMount = () => {\n      let today = this.state.today\n      let month = (today.getUTCMonth() + 1).toString().padStart(2, '0')\n        axios({\n            method: 'get',\n            url: `https://api.mysportsfeeds.com/v2.1/pull/mlb/current/date/20190720/games.JSON?team=hou`,\n            auth: {\n                username: apiKey,\n                password: apiPW\n            }\n        }).then(response => {\n            const games = response.data.games[0]\n\n\n            if (response.data.references === null) {\n              this.setState({\n                gameStatus: 'none'\n              })\n            }\n            else if (response.data.references !== null) {\n              this.setState({\n                awayTeam: games.schedule.awayTeam.abbreviation,\n                homeTeam: games.schedule.homeTeam.abbreviation,\n                venueId: games.schedule.venue.id,\n                gameStart: new Date(games.schedule.startTime),\n                awayScore: games.score.awayScoreTotal,\n                homeScore: games.score.homeScoreTotal,\n                topOrBottom: games.score.currentInningHalf,\n                batterLastName: games.score.playStatus.batter.lastName,\n                pitcherLastName: games.score.playStatus.pitcher.lastName,\n                outs: games.score.playStatus.outCount,\n                balls: games.score.playStatus.ballCount,\n                strikes: games.score.playStatus.strikeCount,\n              })\n            }\n            \n            // checking for runners on base\n            let firstBaseRunner = games.score.playStatus.firstBaseRunner\n            let secondBaseRunner = games.score.playStatus.secondBaseRunner\n            let thirdBaseRunner = games.score.playStatus.thirdBaseRunner\n            if(firstBaseRunner == null && secondBaseRunner === null && thirdBaseRunner === null) {\n              this.setState({\n                runnersOn: ''\n              })\n            }\n            if (firstBaseRunner != null && secondBaseRunner != null && thirdBaseRunner != null) {\n              this.setState({\n                runnersOn: 'BASES LOADED!'\n              })\n            }\n            if (firstBaseRunner != null && secondBaseRunner != null) {\n              this.setState({\n                runnersOn: 'Runners on 1st and 2nd'\n              })\n            }\n            if (firstBaseRunner != null && thirdBaseRunner != null) {\n              this.setState({\n                runnersOn: 'Runners on 1st and 3rd'\n              })\n            }\n            if (secondBaseRunner != null && thirdBaseRunner != null) {\n              this.setState({\n                runnersOn: 'Runners on 2nd and 3rd'\n              })\n            }\n            if (firstBaseRunner != null && secondBaseRunner === null && thirdBaseRunner === null) {\n              this.setState({\n                runnersOn: 'Runner on 1st'\n              })\n            }\n            if (secondBaseRunner != null && firstBaseRunner === null && thirdBaseRunner === null) {\n              this.setState({\n                runnersOn: 'Runner on 2nd'\n              })\n            }\n            if (thirdBaseRunner != null && firstBaseRunner === null && secondBaseRunner === null) {\n              this.setState({\n                runnersOn: 'Runner on 3rd'\n              })\n            }\n            \n\n            \n\n            // adding approprite suffix to numbers\n            let inning = games.score.currentInning\n            if(inning === 1) {\n              this.setState({\n                inning: inning + 'st'\n              })\n            } else if(inning === 2) {\n              this.setState({ \n                inning: inning + 'nd'\n              })\n            } else if(inning === 3) {\n              this.setState({\n                inning: inning + 'rd'\n              })\n            } else {\n              this.setState({\n                inning: inning + 'th'\n              })\n            }\n            \n            // assigning the status of the game to the state\n            if(games.schedule.playedStatus === \"UNPLAYED\") {\n                this.setState({\n                    gameStatus: 'pregame'\n                })\n            }\n             else if(games.schedule.playedStatus === \"LIVE\") {\n                this.setState({\n                    gameStatus: 'live'\n                })\n            }\n            else if(games.schedule.playedStatus === \"COMPLETED\"){\n                this.setState({\n                    gameStatus: 'final'\n                })\n            }\n        }).catch(error => {\n            console.log('Error on Authenication')\n            console.log(error)\n        })\n    }\n\n    render() {\n      let body = null\n\n      if(this.state.gameStatus === 'loading') {\n        body = (\n          <div>Loading...</div>\n        )\n      }\n\n      // if there is an off day\n      else if(this.state.gameStatus === 'none') {\n        body = (\n          <div>\n          <p> No Game Today </p>\n          <p> Check Back Tomorrow!</p>\n          </div>\n        )\n      }\n      // game is live and updating\n      else if(this.state.gameStatus === 'live') {\n            body = (\n                <div>\n                <p>{this.state.awayTeam} - {this.state.awayScore}</p>\n                <p>{this.state.homeTeam} - {this.state.homeScore}</p>\n                <p>Pitching: {this.state.pitcherLastName} </p>\n                <p>{this.state.outs} out(s) in the {this.state.topOrBottom} of the {this.state.inning}</p>\n                <p> At Bat: {this.state.batterLastName} </p>\n                <p>{this.state.balls}-{this.state.strikes}</p>\n                <p>{this.state.runnersOn}</p>\n                </div>\n            )\n        }\n      // logic to check to see if Houston won/lost to declare victory/defeat\n      else if(this.state.awayTeam === 'HOU' && this.state.awayScore > this.state.homeScore) {\n        body = (\n            <div>\n            <VictoryMessage />\n            <p>{this.state.awayTeam} - {this.state.awayScore}</p>\n            <p>{this.state.homeTeam} - {this.state.homeScore}</p>\n            </div>\n        )\n      }\n      else if(this.state.awayTeam === \"HOU\" && this.state.awayScore < this.state.homeScore) {\n        body = (\n            <div>\n            <DefeatMessage />\n            <p>{this.state.awayTeam} - {this.state.awayScore}</p>\n            <p>{this.state.homeTeam} - {this.state.homeScore}</p>\n            </div>\n        )\n      }\n      else if(this.state.homeTeam === 'HOU' && this.state.homeScore > this.state.awayScore) {\n        body = (\n            <div>\n            <VictoryMessage />\n            <p>{this.state.awayTeam} - {this.state.awayScore}</p>\n            <p>{this.state.homeTeam} - {this.state.homeScore}</p>\n            </div>\n        )\n      }\n      else if(this.state.homeTeam === \"HOU\" && this.state.homeScore < this.state.awayScore) {\n        body = (\n            <div>\n            <DefeatMessage />\n            <p>{this.state.awayTeam} - {this.state.awayScore}</p>\n            <p>{this.state.homeTeam} - {this.state.homeScore}</p>\n            </div>\n        )\n      }\n      // if the game hasn't started yet, display game start time\n      else if(this.state.gameStatus === 'pregame') {\n        let date = this.state.gameStart\n        let isAM = true\n        if(date.getHours() > 11) {\n          isAM = false\n        }\n          body = (\n              <div>\n              <p> Game Starts at</p>\n              <p> {date.getHours().toString() % 12}:{date.getMinutes().toString().padStart(2, '0')} {isAM ? 'AM':'PM'} (CT)</p>\n              </div>\n          )\n      }\n\n\n        return (\n          <div>\n          <Breakpoint large up>\n                   <div className='desktopText'> {body}</div>\n          </Breakpoint>\n\n          <Breakpoint medium only>\n                  <div className='tabletText'> {body}</div>\n          </Breakpoint>\n\n          <Breakpoint small down>\n                  <div className='mobileText'> {body}</div>\n          </Breakpoint>\n          </div>\n        )\n      }\n    }\n\nexport default TodaysGame\n","import React from 'react';\nimport TodaysGame from './components/TodaysGame'\nimport './App.css';\nimport Breakpoint from 'react-socks'\n\nfunction App() {\n  return (\n    <div className='mainpage'>\n    <Breakpoint large up>\n       <h1 className='desktopDTAWT'> Did the Astros Win Today? </h1>\n    </Breakpoint>\n    <Breakpoint medium only>\n       <h1 className='tabletDTAWT'> Did the Astros Win Today? </h1>\n    </Breakpoint>\n    <Breakpoint small down>\n       <h1 className='mobileDTAWT'> Did the Astros Win Today? </h1>\n    </Breakpoint>\n\n    <div className=\"bar-zero\"></div>\n    <div className=\"bar-one\"></div>\n    <div className=\"bar-two\"><TodaysGame /></div>\n    <div className=\"bar-three\"></div>\n    <div className=\"bar-four\"></div>\n    <div className=\"bar-five\"></div>\n    <div className=\"bar-six\"></div>\n    <div className=\"bar-seven\"></div>\n    <div className=\"bar-eight\"></div>\n    <div className=\"bar-nine\"></div>\n    <div className=\"bar-zero\"></div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BreakpointProvider } from 'react-socks';\n\n\nReactDOM.render(\n<BreakpointProvider>\n  <App />\n</BreakpointProvider>,\n\n   document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}