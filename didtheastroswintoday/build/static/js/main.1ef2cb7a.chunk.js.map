{"version":3,"sources":["apiKey.js","components/VictoryMessage.js","components/DefeatMessage.js","components/TodaysGame.js","App.js","serviceWorker.js","index.js"],"names":["apiKey","apiPW","VictoryMessage","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","winMessages","randomVictoryMessage","Math","floor","random","length","react_default","a","createElement","Component","DefeatMessage","defeatMessages","randomDefeatMessage","TodaysGame","_this","today","Date","call","componentDidMount","state","month","getUTCMonth","toString","padStart","axios","method","url","concat","getFullYear","getUTCDate","auth","username","password","then","response","games","data","references","setState","gameStatus","awayTeam","schedule","abbreviation","homeTeam","gameStart","startTime","awayScore","score","awayScoreTotal","homeScore","homeScoreTotal","inning","currentInning","topOrBottom","currentInningHalf","playedStatus","catch","error","console","log","venueId","body","components_VictoryMessage","components_DefeatMessage","date","isAM","getHours","getMinutes","dist_default","large","up","className","medium","only","small","down","App","src_components_TodaysGame","Boolean","window","location","hostname","match","ReactDOM","render","dist","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ef2cb7a.chunk.js","sourcesContent":["export const apiKey = 'fbd092c8-d4ac-4444-bfea-24b226'\nexport const apiPW = 'MYSPORTSFEEDS'\n","import React, {Component} from 'react'\n\nexport class VictoryMessage extends Component {\n\nrender() {\n\nlet winMessages = ['Oh yeaaa!', 'You know it!', 'What else did you expect?', 'YUPPP', 'Hell yea!']\nlet randomIndex = Math.floor(Math.random() * winMessages.length)\nlet randomVictoryMessage = winMessages[randomIndex]\n\n  return(\n    <div>\n    <p> {randomVictoryMessage} </p>\n    </div>\n  )\n }\n}\n\nexport default VictoryMessage\n","import React, {Component} from 'react'\n\nexport class DefeatMessage extends Component {\n\nrender() {\n\n  let defeatMessages = ['Uh oh', 'Maybe next time', 'Not today chief', 'Dang...', 'Unfortunately Not']\n  let randomIndex = Math.floor(Math.random() * defeatMessages.length)\n  let randomDefeatMessage = defeatMessages[randomIndex]\n\n  return(\n    <div>\n    <p> {randomDefeatMessage}</p>\n    </div>\n  )\n}\n\n\n}\n\nexport default DefeatMessage\n","import React, {Component} from 'react'\nimport axios from 'axios'\nimport {apiKey} from '../apiKey'\nimport {apiPW} from '../apiKey'\nimport './TodaysGame.css';\nimport Breakpoint from 'react-socks'\nimport VictoryMessage from \"./VictoryMessage\"\nimport DefeatMessage from \"./DefeatMessage\"\n\n\n\nexport class TodaysGame extends Component {\n    constructor() {\n        let today = new Date()\n        super()\n\n        this.state = {\n            venueId: 120,\n            today: today,\n            gameStart: '',\n            homeTeam: '',\n            awayTeam: '',\n            inning: 0,\n            topOrBottom: '',\n            awayScore: 0,\n            homeScore: 0,\n            gameStatus: 'loading',\n\n        }\n    }\n\n\n    componentDidMount = () => {\n      let today = this.state.today\n      let month = (today.getUTCMonth() + 1).toString().padStart(2, '0')\n        axios({\n            method: 'get',\n            url: `https://api.mysportsfeeds.com/v2.1/pull/mlb/current/date/${today.getFullYear()}${month}${today.getUTCDate()}/games.JSON?team=hou`,\n            auth: {\n                username: apiKey,\n                password: apiPW\n            }\n        }).then(response => {\n            const games = response.data.games[0]\n\n\n            if (response.data.references === null) {\n              this.setState({\n                gameStatus: 'none'\n              })\n            }\n            else if (response.data.references !== null) {\n              this.setState({\n                awayTeam: games.schedule.awayTeam.abbreviation,\n                homeTeam: games.schedule.homeTeam.abbreviation,\n                gameStart: new Date(games.schedule.startTime),\n                awayScore: games.score.awayScoreTotal,\n                homeScore: games.score.homeScoreTotal,\n                inning: games.score.currentInning,\n                topOrBottom: games.score.currentInningHalf,\n              })\n            }\n\n            if(games.schedule.playedStatus === \"UNPLAYED\") {\n                this.setState({\n                    gameStatus: 'pregame'\n                })\n            }\n             else if(games.schedule.playedStatus === \"LIVE\") {\n                this.setState({\n                    gameStatus: 'live'\n                })\n            }\n            else if(games.schedule.playedStatus === \"COMPLETED\"){\n                this.setState({\n                    gameStatus: 'final'\n                })\n            }\n        }).catch(error => {\n            console.log('Error on Authenication')\n            console.log(error)\n        })\n    }\n\n    render() {\n      let body = null\n\n      if(this.state.gameStatus === 'loading') {\n        body = (\n          <div>Loading...</div>\n        )\n      }\n\n\n      else if(this.state.gameStatus === 'none') {\n        body = (\n          <div>\n          <p> No Game Today </p>\n          <p> Check Back Tomorrow!</p>\n          </div>\n        )\n      }\n\n      else if(this.state.gameStatus === 'live') {\n            body = (\n                <div>\n                <p>{this.state.awayTeam} - {this.state.awayScore}</p>\n                <p>{this.state.homeTeam} - {this.state.homeScore}</p>\n                <p>{this.state.topOrBottom} of inning {this.state.inning}</p>\n                </div>\n            )\n        }\n        else if(this.state.awayTeam === 'HOU' && this.state.awayScore > this.state.homeScore) {\n          body = (\n              <div>\n              <VictoryMessage />\n              <p>{this.state.awayTeam} - {this.state.awayScore}</p>\n              <p>{this.state.homeTeam} - {this.state.homeScore}</p>\n              </div>\n          )\n        }\n        else if(this.state.awayTeam === \"HOU\" && this.state.awayScore < this.state.homeScore) {\n          body = (\n              <div>\n              <DefeatMessage />\n              <p>{this.state.awayTeam} - {this.state.awayScore}</p>\n              <p>{this.state.homeTeam} - {this.state.homeScore}</p>\n              </div>\n          )\n        }\n        else if(this.state.homeTeam === 'HOU' && this.state.homeScore > this.state.awayScore) {\n          body = (\n              <div>\n              <VictoryMessage />\n              <p>{this.state.awayTeam} - {this.state.awayScore}</p>\n              <p>{this.state.homeTeam} - {this.state.homeScore}</p>\n              </div>\n          )\n        }\n        else if(this.state.homeTeam === \"HOU\" && this.state.homeScore < this.state.awayScore) {\n          body = (\n              <div>\n              <DefeatMessage />\n              <p>{this.state.awayTeam} - {this.state.awayScore}</p>\n              <p>{this.state.homeTeam} - {this.state.homeScore}</p>\n              </div>\n          )\n        }\n        else if(this.state.gameStatus === 'pregame') {\n          let date = this.state.gameStart\n          let isAM = true\n          if(date.getHours() > 11) {\n            isAM = false\n          }\n            body = (\n                <div>\n                <p> Game Starts at</p>\n                <p> {date.getHours().toString() % 12}:{date.getMinutes().toString().padStart(2, '0')} {isAM ? 'AM':'PM'} (CDT)</p>\n                </div>\n            )\n        }\n\n\n        return (\n          <div>\n          <Breakpoint large up>\n                   <div className='desktopText'> {body}</div>\n          </Breakpoint>\n\n          <Breakpoint medium only>\n                  <div className='tabletText'> {body}</div>\n          </Breakpoint>\n\n          <Breakpoint small down>\n                  <div className='mobileText'> {body}</div>\n          </Breakpoint>\n          </div>\n        )\n      }\n    }\n\nexport default TodaysGame\n","import React from 'react';\nimport TodaysGame from './components/TodaysGame'\nimport './App.css';\nimport Breakpoint from 'react-socks'\n\nfunction App() {\n  return (\n    <div className='mainpage'>\n    <Breakpoint large up>\n       <h1 className='desktopDTAWT'> Did the Astros Win Today? </h1>\n    </Breakpoint>\n    <Breakpoint medium only>\n       <h1 className='tabletDTAWT'> Did the Astros Win Today? </h1>\n    </Breakpoint>\n    <Breakpoint small down>\n       <h1 className='mobileDTAWT'> Did the Astros Win Today? </h1>\n    </Breakpoint>\n\n    <div className=\"bar-zero\"></div>\n    <div className=\"bar-one\"></div>\n    <div className=\"bar-two\"><TodaysGame /></div>\n    <div className=\"bar-three\"></div>\n    <div className=\"bar-four\"></div>\n    <div className=\"bar-five\"></div>\n    <div className=\"bar-six\"></div>\n    <div className=\"bar-seven\"></div>\n    <div className=\"bar-eight\"></div>\n    <div className=\"bar-nine\"></div>\n    <div className=\"bar-zero\"></div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BreakpointProvider } from 'react-socks';\n\nReactDOM.render(\n<BreakpointProvider>\n  <App />\n</BreakpointProvider>,\n\n   document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}